<launch>

<!-- 
TO DO 
<arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

<arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  /proc/acpi/battery/BAT0  -->




<arg name="elektron_world_file"  default="$(find elektron_gazebo)/worlds/elektron_world.world"/>
<arg name="gui" default="true"/>
<arg name="base" value="elektron"/> <!-- only elektron -->
<arg name="laser"    value="$(optenv ELEKTRON_LASER Laser)"/> <!--  Laser, NoLaser   -->
<arg name="tower" value="$(optenv ELEKTRON_TOWER True)"/>  <!--  Tower, NoTower  --> 
<arg name="tower_sensor" value="$(optenv ELEKTRON_TOWER_SENSOR rgb)"/>  <!-- kinect, rgb  --> 
<arg name="gmapping" default="false"/> <!-- include slam mapping to simulation <<gmapping ROS package>> --> 
<!-- <env name="LIBGL_ALWAYS_SOFTWARE" value="1"/>  --> 

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg elektron_world_file)"/> <!---->
<arg name="gui" value="$(arg gui)" />
   <arg name="debug" value="false"/>
    <arg name="use_sim_time" value="true"/>
  </include>


  <include file="$(find elektron_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="laser" value="$(arg laser)"/>
    <arg name="tower" value="$(arg tower)"/>
    <arg name="tower_sensor" value="$(arg tower_sensor)"/>
 	<arg name="use_sim" value="1"/> <!-- 0 - physical robot | 1 - simulation -->
  </include>

  <node name="control_subsystem_move_server" pkg="elektron_base" type="move_server.py">
    <param name="maxLinearSpeed" type="double" value="0.254" />
    <param name="maxAngularSpeed" type="double" value="0.87" />
  </node> 
  <node name="virtual_effector_tower_controller" pkg="elektron_base" type="tower_controller.py" />
  <node name="virtual_effector_base_controller" pkg="elektron_base" type="base_controller.py"  args="1"/>
  <node name="control_subsystem_estimator" pkg="elektron_base" type="estimator_server.py" />
  <node name="real_effector_tower_gazebo" pkg="elektron_gazebo" type="tower_real_effector.py" />
  <node name="virtual_receptor_cameras" pkg="elektron_base" type="cameras_controller.py"  args="_1 1 1 1" respawn="true"/>

 <!-- <node name="map_server_gazebo" pkg="map_server" type="map_server" args="$(find elektron_navigation)/maps/523_obstacle2.yaml"/> -->
 <include file="$(find elektron_navigation)/launch/includes/gmapping.launch" if="$(arg gmapping)"/>

</launch>
